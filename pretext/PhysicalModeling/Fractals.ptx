<?xml version="1.0"?>
<section xml:id="physical-modeling_fractals">
  <title>Fractals</title>
  <p xml:id="physical-modeling_pm-fig-6" names="pm_fig_6 pm_6">To understand fractals, we have to start with dimensions.</p>
  <p>For simple geometric objects, dimension is defined in terms of scaling behavior. For example, if the side of a square has length <math>l</math>, its area is <math>l^2</math>. The exponent, 2, indicates that a square is two-dimensional. Similarly, if the side of a cube has length <math>l</math>, its volume is <math>l^3</math>, which indicates that a cube is three-dimensional.</p>
  <p>More generally, we can estimate the dimension of an object by measuring some kind of size (like area or volume) as a function of some kind of linear measure (like the length of a side).</p>
  <p>As an example, We'll estimate the dimension of a 1-D cellular automaton by measuring its area (total number of <q>on</q> cells) as a function of the number of rows.</p>
  <figure align="center" xml:id="id1">
    <caption xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">Figure 9.6: One-dimensional CAs with rules 20, 50, and 18, after 32 time steps.</caption>
    <image source="PhysicalModeling/Figures/1D_CA.png" width="50%" alt="&quot;Figure 9.6: One-dimensional CAs with rules 20, 50, and 18, after 32 time steps.&quot;"/>
  </figure>
  <p><xref ref="pm-fig-6"/> shows three 1-D CAs like the ones we saw in <xref ref="cellular-automatons_a-simple-ca"/>. Rule 20 (left) generates a set of cells that seems like a line, so we expect it to be one-dimensional. Rule 50 (center) produces something like a triangle, so we expect it to be 2-D. Rule 18 (right) also produces something like a triangle, but the density is not uniform, so its scaling behavior is not obvious.</p>
  <p>We'll estimate the dimension of these CAs with the following function, which counts the number of on cells after each time step. It returns a list of tuples, where each tuple contains <c>i</c>, <math>i^2</math>, and the total number of cells.</p>
  <pre>def count_cells(rule, n=500):
    ca = Cell1D(rule, n)
    ca.start_single()

    res = []
    for i in range(1, n):
        cells = np.sum(ca.array)
        res.append((i, i**2, cells))
        ca.step()

    return res</pre>
  <figure align="center" xml:id="id2">
    <caption xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">Figure 9.7: Number of <q>on</q> cells versus number of time steps for rules 20, 50, and 18.</caption>
    <image source="PhysicalModeling/Figures/NUM_ON_CELL.png" width="50%" alt="&quot;Figure 9.7: Number of &#x201C;on&#x201D; cells versus number of time steps for rules 20, 50, and 18.&quot;"/>
  </figure>
  <p><xref ref="pm-fig-7"/> shows the results plotted on a log-log scale.</p>
  <p>In each figure, the top dashed line shows <math>y = i^2</math>. Taking the log of both sides, we have <math>log y = 2 log i</math>. Since the figure is on a log-log scale, the slope of this line is 2.</p>
  <p>Similarly, the bottom dashed line shows <math>y = i</math>. On a log-log scale, the slope of this line is 1.</p>
  <p>Rule 20 (left) produces 3 cells every 2 time steps, so the total number of cells after <c>i</c> steps is <math>y = 1.5 i</math>. Taking the log of both sides, we have <math>log y = log 1.5 + log i</math>, so on a log-log scale, we expect a line with slope 1. In fact, the estimated slope of the line is 1.01.</p>
  <p>Rule 50 (center) produces <math>i+1</math> new cells during the ith time step, so the total number of cells after <c>i</c> steps is <math>y = i^2 + i</math>. If we ignore the second term and take the log of both sides, we have <math>log y &#x223C; 2 log i</math>, so as <c>i</c> gets large, we expect to see a line with slope 2. In fact, the estimated slope is 1.97.</p>
  <p>Finally, for Rule 18 (right), the estimated slope is about 1.57, which is clearly not 1, 2, or any other integer. This suggests that the pattern generated by Rule 18 has a <q>fractional dimension</q>; that is, it is a fractal.</p>
  <p>This way of estimating a fractal dimension is called <term>box-counting</term>.</p>
  <exercise>
    <statement>
      <p>Q-1: The estimated slope of rule 20 is <BlankNode/>, the estimated slope of rule 50 is <BlankNode/>, and the estimated slope of rule 18 is <BlankNode/>. <var/>  <var/>  <var/>  </p>
    </statement>
    <setup>
      <var>
        <condition number="[1.01, 1.01]">
          <feedback>
            <p>Correct!</p>
          </feedback>
        </condition>
        <condition number="[1.97, 1.97]">
          <feedback>
            <p>Look again at what rule's slope you are looking.</p>
          </feedback>
        </condition>
        <condition number="[1.57, 1.57]">
          <feedback>
            <p>Close, but this is not the slope for this rule.</p>
          </feedback>
        </condition>
        <condition string="^\s*x\s*$">
          <feedback>
            <p>Incorrect, please try again.</p>
          </feedback>
        </condition>
      </var>
      <var>
        <condition number="[1.97, 1.97]">
          <feedback>
            <p>Correct!</p>
          </feedback>
        </condition>
        <condition number="[1.57, 1.57]">
          <feedback>
            <p>Close, but this is not the slope for this rule.</p>
          </feedback>
        </condition>
        <condition number="[1.01, 1.01]">
          <feedback>
            <p>This is incorrect sorry, please pay attention to what rule the blank is for.</p>
          </feedback>
        </condition>
        <condition string="^\s*x\s*$">
          <feedback>
            <p>Incorrect, please try again.</p>
          </feedback>
        </condition>
      </var>
      <var>
        <condition number="[1.57, 1.57]">
          <feedback>
            <p>Correct!</p>
          </feedback>
        </condition>
        <condition number="[1.01, 1.01]">
          <feedback>
            <p>This is incorrect sorry, please pay attention to what rule the blank is for.</p>
          </feedback>
        </condition>
        <condition number="[1.97, 1.97]">
          <feedback>
            <p>Look again at what rule's slope you are looking.</p>
          </feedback>
        </condition>
        <condition string="^\s*x\s*$">
          <feedback>
            <p>Incorrect, please try again.</p>
          </feedback>
        </condition>
      </var>
    </setup>
  </exercise>
</section>
